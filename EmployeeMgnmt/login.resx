<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>